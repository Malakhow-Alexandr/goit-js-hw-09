{"mappings":"oeAAAA,EAAA,S,WAkBA,SAASC,EAAcC,EAAUC,EAAOC,GACtC,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KAChCL,EACFM,QAAQC,IAAI,oBAAqBV,IAEjCS,QAAQC,IAAI,UACZD,QAAQC,IAAI,mBAAoBV,GAChCS,QAAQC,IAAI,eAAgBT,G,KAvBrB,CACXU,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMf,MAAEA,EAAKC,KAAEA,EAAIe,OAAEA,GAAWF,EAAIG,cAEpC,IAAKC,EAAI,EAAGA,EAAIC,OAAOH,EAAOI,OAAQF,GAAK,EACzCpB,EAAeoB,GAAK,EAAIC,OAAOnB,EAAMoB,OAAQD,OAAOlB,EAAKmB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget;\n\n  for (i = 0; i < Number(amount.value); i += 1) {\n    createPromise((i += 1), Number(delay.value), Number(step.value));\n  }\n}\n\nfunction createPromise(position, delay, step) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      console.log(' resolve position', position);\n    } else {\n      console.log('reject');\n      console.log(' reject position', position);\n      console.log('reject delay', delay);\n    }\n  });\n}\n"],"names":["parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","step","shouldResolve","Math","random","Promise","resolve","reject","console","log","form","document","querySelector","addEventListener","evt","preventDefault","amount","currentTarget","i","Number","value"],"version":3,"file":"03-promises.e2df1c3b.js.map"}