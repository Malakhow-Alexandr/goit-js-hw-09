{"mappings":"iMAkBA,SAASA,EAAcC,EAAUC,EAAOC,GACtC,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GAChCL,EACFM,QAAQC,IAAI,oBAAqBV,IAEjCS,QAAQC,IAAI,UACZD,QAAQC,IAAI,mBAAoBV,GAChCS,QAAQC,IAAI,eAAgBT,G,mTA1BlCU,EAAA,S,WAGa,CACXC,KAAMC,SAASC,cAAc,UAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJ,IAAgCC,EAAAF,EAAIG,cAA5BlB,EAAwBiB,EAAxBjB,MAAOC,EAAiBgB,EAAjBhB,KAAMkB,EAAWF,EAAXE,OAErB,IAAKC,EAAI,EAAGA,EAAIC,OAAOF,EAAOG,OAAQF,GAAK,EACzCtB,EAAesB,GAAK,EAAIC,OAAOrB,EAAMsB,OAAQD,OAAOpB,EAAKqB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget;\n\n  for (i = 0; i < Number(amount.value); i += 1) {\n    createPromise((i += 1), Number(delay.value), Number(step.value));\n  }\n}\n\nfunction createPromise(position, delay, step) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      console.log(' resolve position', position);\n    } else {\n      console.log('reject');\n      console.log(' reject position', position);\n      console.log('reject delay', delay);\n    }\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","step","shouldResolve","Math","random","Promise","resolve","reject","console","log","parcelRequire","form","document","querySelector","addEventListener","evt","preventDefault","_currentTarget","currentTarget","amount","i","Number","value"],"version":3,"file":"03-promises.60391c1e.js.map"}